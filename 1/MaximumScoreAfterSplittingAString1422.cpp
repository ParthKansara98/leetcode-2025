#include <iostream>

using namespace std;

int maxScore(string s) {
    int totalOne = 0, one = 0, zero = 0, maxSum = 0;

    for (int i = 0; i < s.length(); i++)
        if(s.at(i) == '1')totalOne++;
    
    for (int i = 0; i < s.length()-1; i++) {
        s.at(i) == '0'?zero++:one++;
        maxSum = max(maxSum, zero + (totalOne - one));//(totalZero - zero)
    }
    return maxSum;
}

int main() {
    cout << maxScore("011101") << endl;
    cout << maxScore("00111") << endl;
    cout << maxScore("1111") << endl;
    cout << "---------------------" << endl;
    cout << maxScore("00") << endl;
    cout << maxScore("01") << endl;
    cout << maxScore("010") << endl;
    cout << maxScore("01101") << endl;
    cout << maxScore("0010") << endl;
    cout << maxScore("1111000") << endl;
    cout << maxScore("00011010011111110010000100011111000000100010001010001100101010110101101110011111110100011010100100111100101111110110101011100111001101100111111010111100111010001000000011111000000000011001110111001011101101000000101001000010010101111111110001000111101001111010010010110011100001000001110011100101011010010110001110110001010111110100011011101000100000111111011100000001111100011101001101100111011111100101101101110011111110000001001111100011100001010000011010010100101100100001100111101011111110100010") << endl;
    cout << maxScore("01110111111111111010110011100011110101001111010011011001010000010001001010000110001110100010110001000110010000110111010011010000101110100010001010111111011110111010001001100100110111000010010000101011001110111011011011101100110001000011001111100101001001000011010101000100010000010001011111000010111100001110110010111111110100000100100101110111001001110100010001100111001000100000101101011001011010001101111101110001011111110011100010001010010111011001011110101110101111100110110101000100010111010011") << endl;
    return 0;
}
/*
g++ -o MaximumScoreAfterSplittingAString1422 MaximumScoreAfterSplittingAString1422.cpp;./MaximumScoreAfterSplittingAString1422
*/
